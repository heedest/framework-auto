package com.automation.test;

import java.io.IOException;
import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.FindBys;
import org.openqa.selenium.support.PageFactory;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;
import org.testng.log4testng.Logger;

import com.automation.base.BaseClass;
import com.automation.page.PageObjectClass;
import com.automation.utility.UtilityHelper;

public class MainTest extends BaseClass {
	/* Logger log=Logger.getLogger(MainTest.class); */
	Logger logger=Logger.getLogger(MainTest.class);
	
	PageObjectClass pobject=PageFactory.initElements(driver,PageObjectClass.class);
	SoftAssert softAssert = new SoftAssert();
	
	@Test(priority=1)
	public void googleSearch() throws IOException, InterruptedException {
		//PageObjectClass pobject=PageFactory.initElements(driver,PageObjectClass.class);
		pobject.searchLocation("Wankhede Stadium");
		Thread.sleep(5000);
		pobject.clickSearch();
		Thread.sleep(5000);
		UtilityHelper.takeScreenshotOfTest();
		logger.info("first test successfully completed");
		log.info("100");
		
	}
	
	@Test(priority=2)
	public void verifyStadiumText()
	{
		SoftAssert softAssert = new SoftAssert();
		softAssert.assertTrue(pobject.verifyText(), "Stadium Text not matched");
		softAssert.assertAll();
	}
	
	
	@Test(priority=3)
	public void verifyTitle()
	{
	
		//Assert.assertEquals(pobject.verifyTitle(),"Wankhede Stadium Mumbai - Google Maps","title not matched");
		Assert.assertEquals(pobject.verifyTitle(),"Google Maps","title not matched");
	}
	
	//prinbt using logger
	@Test(priority=4)
	public void verifyLink(){
		Assert.assertTrue(pobject.verifylink(),"link not matched");
		
	}
	
	@Test(priority=5)
	public void verifyPhone() throws IOException{
		softAssert.assertTrue(pobject.verifyPhone(),"phone not matched");
		UtilityHelper.takeScreenshotOfTest();
		logger.info("last successfully completed");
		softAssert.assertAll();
		
	}
	
	
	
}
